== Introduction to IPv6

IPv6 stands for Internet Protocol version 6, so the importance of IPv6 is implicit in its name, it’s as important as Internet!
The Internet Protocol (IP from now on) was a tentative solution to data network’s needs, and has become the “de facto” standard. By now you just need to know that IP is present in all devices that are able to send and receive digital information using data networks, including the Internet.
IP is standardized by the IETF, the organization in charge of all the Internet standards, what makes it easy to find, cheap, and interoperate properly between different vendor’s products and software. The fact that IP is a standard is of vital importance, because today everything is getting connected to the Internet where IP is used. All available Operating Systems and networking libraries have IP available in order to send and receive data.
Included in this "everything-connected-to-Internet" is the IoT, so now you know why you are reading this chapter about IPv6, the last version of the Internet Protocol. In other words, today, the easiest way to send and receive data is using the standards used in the Internet, including the IP.


The objectives of this chapter are:

*	Briefly know about history of the Internet Protocol.

*	Know what IPv6 is used for.

*	Get the IPv6 related concepts that you will need to understand the rest of the book.

*	Give you the first practical overview of IPv6, including addresses and how an IPv6 network looks like.

=== A little bit of History
In the beginning of Internet, that started as a research network called ARPANET in early 1980's,the first Internet Protocol was defined, was called IPv4 (Internet Protocol version 4). First only research centers and Universities were connected, but after the U.S. Department of Defense decided to use IP as network protocol much more funding and vendors make it to develop and be much more widely used, including vendors that implemented it.
The next step was that ARPANET became Internet and get open to everybody that wanted to connect to it, including companies and public services. The exponential growth of Internet happened when HTML and web sites appeared and started to be used world-wide in the beginning of 1990's. As a consequence there was a rapid reduction in the number of free IP addresses available under IPv4, which was never designed to scale to these levels.

In order to get more addresses, you need more bits, which means a longer IP address, which means a new architecture, which means changes to all of the routing and network software.
After examining a number of proposals, the IETF settled on IPv6, recommended in January 1995 in RFC 1752, sometimes also referred to as the Next Generation Internet Protocol, or IPng. The IETF updated the IPv6 standard in 1998 with the current definition included in RFC 2460.
By 2004, IPv6 was widely available from industry and supported by most new network equipment. Today IPv6 coexist with IPv4 in the Internet and the amount of IPv6 traffic is quickly growing as more and more ISPs and content providers have started to make IPv6 available.

As you can see the history of IP and Internet are almost the same, and because of this the growth of Internet has made IPv4 become insufficient for its needs, and has led to the need of a new version of IP, IPv6, that is clearly the future of Internet and the protocol to be used to interconnect devices to send and/or receive information. There are even some technologies that are being developed only with IPv6 in mind, a good example in the context of the IoT is 6LowPAN.
From now on we will only center on IPv6. If you know something about IPv4, then you have half the way done, if not, don’t worry we will cover the main concepts briefly and gently.

=== IPv6 Concepts
We will cover the basics of IPv6, the minimum you need to know about the last version of the Internet Protocol to understand why it's so useful for the IoT and how it's related with other protocols like 6LowPAN covered later in this book.
You need to have understood the concepts covered in the Networking Basics chapter, so you are familiar with bits, bytes, networking stack, network layer, packets, IP header, etc.
You should understand that IPv6 is the equivalent to IPv4, it is a different and non-compatible protocol, with respect to IPv4. In the following figure we represent the layered model used in the Internet.

image::./images/0/image001.png[]


IPv6 will operate in the layer 3, also called network layer. The pieces of data handled by layer 3 are called packets. We will have hosts that could be a PC, laptop or a sensor board, sending and/or receiving data packets. Hosts will be the source or destination of the packets. Routers instead are in charge of packet forwarding, and are responsible of deciding to which other router send the packet it has received. Internet is composed of a lot of routers, interconnected between them, which receive data packets in one interface and send then as quick as possible using another interface towards another forwarding router.
The first thing you have to know is how an IPv6 packet looks like:

image::./images/0/image002.png[]

By one side you have the *basic IPv6 header* with a fixed size of 40 bytes, followed by upper layer data and optionally by some extensions headers, we will talk about extension headers later. As you can see there are several fields in the packet header, but compared with IPv4 header there are some improvements:

*	Number of fields have been reduced from 12 to 8 fields.

*	The basic IPv6 header has a fixed size of 40 bytes and is aligned with 64 bits, allowing a faster hardware-based packet forwarding on routers.

*	Addresses increased from 32 to 128 bits.

The most important fields are the source and destination addresses. As you already know, every IP device has a unique IP address that identifies it in the Internet. Also this IP address is used by routers to take their forwarding decisions.

IPv6 header have 128 bits for each IPv6 address, this allows for 2^128^ addresses (approximately 3.4×1038,i.e., 3.4 followed by 38 zeroes), compared with IPv4 that have 32 bits to encode the IPv4 address allowing for 232 addresses (4,294,967,296).

We have seen the basic IPv6 header, and we already mentioned the *extensions headers*. To keep the basic header simple and of a fixed size, additional features are added to IPv6 by means of extensions header.

image::./images/0/image003.png[]

There are several extensions headers defined, as you can see in the previous figure, and they have to follow the shown order. Extensions headers:

*	Provide flexibility, for example to provide security service by ciphering the data in the packet.

*	Optimize the processing of the packet, because with the exception of the hop by hop header, they are only processed by end nodes, source and destination of the packet, not by all the routers in the path.

*	They are located as a "chain of headers" starting always in the basic IPv6 header, that use the field next header to point the first extension header.

The use of 128 bits for addresses brings some benefits:

*	Provide much more addresses, to satisfy actual and future needs, allowing for innovation.

*	Easy address auto-configuration mechanisms.

*	Easier address management/delegation.

*	Room for more levels of hierarchy and for route aggregation.

*	Ability to do end-to-end IPsec.

All IPv6 addresses could be classified into the following categories (these categories also exist for IPv4):

*	*Unicast* (one-to-one): used to send a packet from one source to one destination. Are the commonest ones and we will talk more about them and the sub-classes that exist.
*	*Multicast* (one-to-many): used to send a packet from one source to several destinations. This is possible by means of multicast routing that makes packets to replicate in some places.
*	*Anycast* (one-to-nearest): used to send a packet from one source the nearest destination from a set of them.
*	*Reserved*: Addresses or groups of them that have special use defined, for example addresses to be used on documentation and examples.

Before entering into more detail about IPv6 addresses and the types of unicast addresses, let's see how does they look like and what are the notation rules. You need to have them clear because probably this will be the first problem you will find in practice when using IPv6, how to write an address.

Notation rules are:

*	8 Groups of 16 bits separated by “:”.

*	Hexadecimal notation of each nibble (4 bits).

*	No case sensitive.

*	Network Prefixes (group of addresses) are written Prefix / Prefix Length, i.e., prefix length indicate the number of bits of the address that are fixed.

*	Leftmost zeroes within each group could be eliminated.

*	One or more all-zero-groups could be substituted by “::”. This could be done only once.

Three first rules tell you the basis of IPv6 address notation. The first thing you should know is that hexadecimal notation is used, i.e., sixteen symbols between 0 and F. You will have eight groups of four hexadecimal symbols, each group separated by a colon ":".
The last two rules are for address notation compression, we will see how they work with some examples.

Let's see some examples:

1) If we represent all the address bits we have the preferred form, for example: 2001:0db8:4004:0010:0000:0000:6543:0ffd

2) If we use squared brackets around the address we have the literal form of the address: [2001:0db8:4004:0010:0000:0000:6543:0ffd]

3) If we apply the fourth rule, allowing compression within each group eliminating leftmost zeroes, we have: 2001:db8:4004:10:0:0:6543:ffd

4) If we apply the fifth rule, allowing compression of one or more consecutive groups of all zeroes using "::", we have: 2001:db8:4004:10::6543:ffd

Last but not least you have to understand the concept of a *network prefix*, that indicates some fixed bits and some non-defined bits that could be used to create new sub-prefixes or to define complete IPv6 addresses.

Let's see some examples:

1) The network prefix 2001:db8:1::/48 (the compressed form of 2001:0db8:0001:0000:0000:0000:0000:0000) indicates that the first 48 bits will allways be the same (2001:0db8:0001) but that we can play with the other 80 bits, for example, to obtain two smaller prefixes: 2001:db8:1:a::/64 and 2001:db8:1:b::/64.

2) If we take one of the smaller prefixes defined above, 2001:db8:1:b::/64, where the first 64 bits are fixed we have the rightmost 64 bits to assign, for example, to an IPv6 interface in a host: 2001:db8:1:b:1:2:3:4.
This last example allow us to introduce a basic concept in IPv6: *In a LAN (Local Area Network) always a /64 prefix is used*. *The rightmost 64 bits, are called the interface identifier (IID) because they identify uniquely a host's interface in the local network defined by the /64 prefix*. The following figure illustrates this statement:

image::./images/0/image004.png[]





Now you have seen your first IPv6 addresses we can enter into more detail about two types of addresses you will find when you start working with IPv6: reserved and unicast.

The following are some reserved or special purpose addresses:

*	The *unspecified address*, used as a placeholder when no address is available: 0:0:0:0:0:0:0:0 (::/128)

*	The *loopback address*, for sending packets to itself: 0:0:0:0:0:0:0:1 (::1/128)

*	*Documentation Prefix*: 2001:db8::/32. This prefix is reserved to be used in examples and documentation, you have already seen it in this chapter.

The following are some types of unicast addresses:

*	*Link-local*: Link-local addresses are always configured in any IPv6 interface that is connected to a network. They all start with the prefix FE80::/10 and can be used to communicate with other hosts on the same local network, i.e., all hosts connected to the same switch. They couldn't be used to communicate with other networks, i.e., to send or receive packets through a router.

*	*ULA* (Unique Local Address): All ULA addresses start with the prefix FC00::/7, what means in practice that you could see FC00::/8 or FD00::/8. Intended for local communications, usually inside a site, they are not expected to be routable on the Global Internet but routable inside of a more limited area such as a site.

*	*Global Unicast*: Equivalent to the IPv4 public addresses, are unique in the whole Internet and could be used to send a packet from anywhere in the Internet to any destination in Internet as well.

=== What is IPv6 used for
As we have seen IPv6 has some features that makes it easier different things like global addressing and hosts address autoconfiguration.
Because IPv6 provides as much addresses as we may need for some hundreds of years, we can put a global unicast IPv6 address on almost anything we may think of. This brings back the initial Internet paradigm that every IP device could communicate with every IP device. This end-to-end communication allow for bidirectional communication all over the Internet and between any IP device, what could result in collaborative applications and new ways of storing, sending and accessing the information.
In the context of this book we can, for example, think on IPv6 sensors all around the world collecting, sending and being accessed from different places to create a world-wide mesh of physical values measured, stored and processed.

The availability of a huge amount of addresses have allowed a new mechanism called *stateless address autoconfiguration* (SLAAC) that didn't exist with IPv4. Following is a brief summary of the ways you can configure an address on an IPv6 interface:

*	*Statically*: You can decide which address you will give to your IP device and then manually configure it into the device using any kind of interface: web, command line, etc. Commonly you also have to configure other network parameters like the gateway to use to send packets out of your network.

*	*DHCPv6* (Dynamic Host Configuration Protocol for IPv6): This mechanism already existed for IPv4 and the idea is the same. You need to configure a dedicated server that after a brief negotiation with the IP device assigns an IP address to it. DHCPv6 allows IP devices to be configured automatically, this is why you could find it named stateful address autoconfiguration, because the DHCPv6 server maintains an state of assigned addresses.

*	*SLAAC*: Stateless address autoconfiguration is a new mechanism introduced with IPv6 that allows to configure automatically all network parameters on an IP device using the router that gives connectivity to a network.

The advantage of SLAAC is that it simplifies the configuration of "dumb" devices, like sensors, cameras or any other device with low processing power. You don't need to use any interface in the IP device to configure anything, just "plug and net". It also simplifies the network infrastructure needed to build a basic IPv6 network, because you don't need additional device/server, you use the same router you need to send packets outside your network to configure the IP devices.
We are not going to enter into details, but you just need to know that in a local network, usually called a LAN (Local Area Network), that is connected to a router, this router is in charge of sending all the information needed to the hosts using a RA (Router Advertisement) message. The router will send RAs periodically, but in order to make things happen quicker hosts can send a RS (Router Solicitation) message when its interface gets connected to the network. The router will send a RA immediately in response to the RS.
The following figure show the packet exchange between a host that is just connected to a local network and some IPv6 destination in Internet:

image::./images/0/image005.png[]


1) R1 is the router that gives connectivity to host's network nad is sending RAs periodically.

2) Both R1 and Host have a link-local address in their interfaces connected to the host's LAN, this address is configured automatically when the interface is ready. Our host creates it's link-local address by combining 64 leftmost bits of the link-local's prefix (fe80::/64) and the rightmost 64 bits of a locally generated IID (:3432:7ff1:c001:c2a1). These link-local addresses could be used in the LAN to exchange packets, but not to send packets outside the LAN.

3) The hosts needs to basic things to be able to send packets to other networks: a global IPv6 address and the address of a gateway, i.e., a router to which send the packets it wants to get routed outside its network.

4) Although R1 is sending RAs periodically (usually each several seconds) when the host get connected and has configured its link-local address, it sends a RS to which R1 responds immediately with a RA containing two things:
4.1) A global prefix of length 64 that is intended for SLAAC. The host takes the received prefix and add to it a locally generated IID, usually the same as the one used for link-local address. This way a global IPv6 address is configured in the host and now can communicate with the IPv6 Internet
4.2) Implicitly included is the link-local address of R1, because is the source address of the RA. Our host could use this address to configure the default gateway, the place to which send the packets by default, for example, to reach an IPv6 host somewhere in Internet.

5) Once both the gateway and global IPv6 address are configured, the host can receive or send information. In the figure it has something to send (Tx Data) to a host in Internet, so it creates an IPv6 packet with IPv6 destination address the one of the destination host and source address it's recently autoconfigured global address, and sends it to its gateway, R1's link-local address. The destination host could answer with some data (Rx Data).

=== Network Example
Following we will show how a simple IPv6 network will look like, including IPv6 addresses for all the networking devices.

image::./images/0/image006.png[]


We have four hosts, or sensors, or whatever IP device you have, and we want to put two of them in two different places, for example two floors in a building. We have just put four IP devices but you can have up to 264 (18,446,744,073,709,551,616) devices connected on the same LAN.

We create two LANs with a router on each one, both routers connected to a central router (R1) that provides connectivity to Internet. LAN1 is served by R2 (with link-local address fe80::2c:f3f4:1214:a on that LAN) and uses the prefix 2001:db8:1:2::/64 announced by SLAAC. LAN2 is served by R3 (with link-local address fe80::1b:fff4:3344:b on that LAN) and uses the prefix 2001:db8:1:3::/64 announced by SLAAC.

All hosts have both a link-local IPv6 address and a global IPv6 address autoconfigured using the announced prefix by the corresponding router by means of RAs. In addition, remember that each host also configure the gateway using the link-local address used by the router for the RA. Link-local address could be used for communication between hosts inside a LAN, but for communicating with hosts in other LAN or any other network outside its own LAN a global IPv6 address is needed.

=== IPv6 Excercises

Let's test your IPv6 knowledge with the following excercises:

1) What size are IPv4 and IPv6 addresses, respectively?

    .. 32-bits, 128-bits
    .. 32-bits, 64-bits
    .. 32-bits, 112-bits
    .. 32-bits, 96-bits
    .. none of these
    
2) Which of the following is a valid IPv6 address notation rule?

  .. Zeroes on the right inside a group of 16 bits could be eliminated
  .. The address is divided in 5 groups of 16 bits separated by ":"
  .. The address is divided in 8 groups of 16 bits separated by "."
  .. One or more groups of all zeroes could be substituted by "::" 
  .. Decimal notation is used grouping bits in 4 (nibbles)

3) Interface Identifiers (IID) or the rightmost bits of an IPv6 address used on a LAN will be 64 bits long.

  .. True
  .. False

4) Which of the following is a correct IPv6 address?
 
  .. 2001:db8:A:B:C:D::1
  .. 2001:db8:000A:B00::1:3:2:F
  .. 2001:db8:G1A:A:FF3E::D
  .. 2001:0db8::F:A::B

5) Which ones of the following sub-prefixes belong to the prefix 2001:db8:0A00::/48? (Choose all that apply)

  .. 2001:db9:0A00:0200::/56
  .. 2001:db8:0A00:A10::/64 
  .. 2001:db8:0A:F:E::/64
  .. 2001:db8:0A00::/64

6) IPv6 has a basic header with more fields than IPv4 header?

    .. True
    .. False

7) Extension headers could be added in any order
 
    .. True
    .. False

8) Autoconfiguration of IP devices is the same in IPv4 and IPv6
 
    .. True
    .. False

9) Which one is not an option for configuring an IPv6 address in an interface?

  .. DHCPv6
  .. Fixed address configured by vendor
  .. Manually
  .. SLAAC (Stateless Address Autoconfiguration)

10) Which packets are used by SLAAC to autoconfigure an IPv6 host?

  .. NS/NA (Neighbor Solicitation / Neighbor Advertisement)
  .. RS/RA (Router Solicitation / Router Advertisement)
  .. Redirect messages
  .. NS / RA (Neighbor Solicitation / Router Advertisement)


=== Addressing Exercises

A) Use the two compression rules to compress up to the maximum the following addresses:

  . 2001:0db8:00A0:7200:0fe0:000B:0000:0005
  . 2001:0db8::DEFE:0000:C000
  . 2001:db8:DAC0:0FED:0000:0000:0B00:12

B) Decompress up to the maximum (representing all the 32 nibbles in hexadecimal) the following addresses:

 . 2001:db8:0:50::A:123 
 . 2001:db8:5::1
 . 2001:db8:C00::222:0CC0

C) You receive the following IPv6 prefix for your network: 2001:db8:A:0100::/56

You have the following network:
 
image::./images/0/image007.png[]
 
You have to define the following:

.. IPv6 prefix for LAN1, a /64 prefix taken from the /56 you have.
.. IPv6 prefix for LAN2, a /64 prefix taken from the /56 you have.
.. IPv6 prefix for LAN3, a /64 prefix taken from the /56 you have.
.. A global IPv6 address using the LAN1 prefix for H1 host (added to the link-local address already used).
.. A global IPv6 address using the LAN2 prefix for H2 host (added to the link-local address already used).
.. A global IPv6 address using the LAN3 prefix for H3 host (added to the link-local address already used).

TIP: Hint: To divide the /56 prefix into /64 prefixes, you have to change the value of the bits 57 to 64, i.e., the XY values in 2001:db8:A:01XY::/64.

